name: Build neurodesktop-dev

on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches: [ main ]
    paths:
      - .github/workflows/build-neurodesktop-dev.yml
      - Dockerfile
      - startup.sh
      - config/*
    
env:
  DOCKERHUB_ORG: ${{ secrets.DOCKERHUB_ORG }}

jobs:
  test_cvmfs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cvmfs-server: [152.67.114.42, 150.136.239.221, 203.101.231.144, 132.145.96.34, 140.238.170.185, 130.61.74.69]
    steps:
    - uses: actions/checkout@v2
    - name: check if ${{ matrix.cvmfs-server }} is online and up-to-date
      run: /bin/bash .github/workflows/test_cvmfs.sh  ${{ matrix.cvmfs-server }}
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Pull latest neurodesktop build from GitHub packages
      run: |
        echo ${GITHUB_REF}
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
        IMAGEID=ghcr.io/$GITHUB_REPOSITORY/neurodesktop-dev
        IMAGEID=$(echo $IMAGEID | tr '[A-Z]' '[a-z]')
        {
          docker pull $IMAGEID \
            && ROOTFS_CACHE=$(docker inspect --format='{{.RootFS}}' $IMAGEID) \
            && echo "ROOTFS_CACHE=$ROOTFS_CACHE" >> $GITHUB_ENV
        } || echo "$IMAGEID not found. Resuming build..."
        echo "IMAGEID=$IMAGEID" >> $GITHUB_ENV
    - name: Build new neurodesktop image
      run: |
        SHORT_SHA=$(git rev-parse --short $GITHUB_SHA)
        docker build . --file Dockerfile --tag $IMAGEID:$SHORT_SHA --cache-from $IMAGEID --label "GITHUB_REPOSITORY=$GITHUB_REPOSITORY" --label "GITHUB_SHA=$GITHUB_SHA"
        ROOTFS_NEW=$(docker inspect --format='{{.RootFS}}' $IMAGEID:$SHORT_SHA)
        BUILDDATE=`date +%Y%m%d`
        echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
        echo "ROOTFS_NEW=$ROOTFS_NEW" >> $GITHUB_ENV
        echo "BUILDDATE=$BUILDDATE" >> $GITHUB_ENV
    - name: Container image scan
      uses: Azure/container-scan@v0.1
      with:
        image-name: env.IMAGEID:env.SHORT_SHA
        severity-threshold: HIGH
        run-quality-checks: true
    - name: Push neurodesktop to GitHub packages (if changes found)
      if: env.ROOTFS_NEW != env.ROOTFS_CACHE
      run: |
        # Push to GH Packages
        docker tag $IMAGEID:$SHORT_SHA $IMAGEID:$BUILDDATE
        docker tag $IMAGEID:$SHORT_SHA $IMAGEID:latest
        docker push $IMAGEID:latest
        docker push $IMAGEID:$BUILDDATE
    - name: Push neurodesktop to Docker Hub (if enabled & changes found)
      if: env.ROOTFS_NEW != env.ROOTFS_CACHE && env.DOCKERHUB_ORG != ''
      run: |
        echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        # Push to GH Packages
        docker tag $IMAGEID:$SHORT_SHA $DOCKERHUB_ORG/neurodesktop-dev:latest
        docker push $DOCKERHUB_ORG/neurodesktop-dev:latest
